services:
  agent:
    image: portainer/agent:2.21.4
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
      update_config:
        parallelism: 1
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
      resources:
        limits:
          cpus: "0.25"
          memory: "64M"
        reservations:
          cpus: "0.10"
          memory: "32M"

  portainer:
    image: portainer/portainer-ce:2.21.4
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9000"
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - agent_network
      - cloudflared-network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        dev.mattprovost.portainer.domain: "{{ lookup('service_domain', 'portainer') }}"
        dev.mattprovost.portainer.port: 9000
        dev.mattprovost.portainer.access: "true"
        dev.mattprovost.portainer.access.admin: "true"
      update_config:
        parallelism: 1
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s
      resources:
        limits:
          cpus: "0.25"
          memory: "64M"
        reservations:
          cpus: "0.10"
          memory: "32M"

networks:
  agent_network:
    driver: overlay
    attachable: true
  cloudflared-network:
    external: true

volumes:
  portainer_data:
